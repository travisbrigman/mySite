steps:
- name: 'gcr.io/cloud-builders/docker'
entrypoint: 'bash'
args:
  - '-c'
  - |
  docker pull ${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:latest || exit 0
  - name: 'gcr.io/cloud-builders/docker'
	args:
	  - build
	  - -t
	  - ${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:$SHORT_SHA
	  - -t
	  - ${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:latest
	  - .
	  - --cache-from
	  - ${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:latest
  - name: 'gcr.io/cloud-builders/docker'
	args:
	  [
		'push',
		'${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:$SHORT_SHA'
	  ]
  - name: 'gcr.io/cloud-builders/gcloud'
	args:
	  - run
	  - deploy
	  - swift-service
	  - --image=${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:$SHORT_SHA
	  - --port=8080
	  - --region=${_region}
	  - --memory=512Mi
	  - --platform=managed
	  - --allow-unauthenticated
	  - --min-instances=0
	  - --max-instances=5
images:
  - '${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:$SHORT_SHA'
  - '${_region}-docker.pkg.dev/$PROJECT_ID/${_repository_name}/${_service_name}:latest'
  
timeout: 1800s